<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:properties/jdbc.properties"/>
  </bean>

  <!-- 动态数据源 -->
  <bean id="dataSource" class="com.bcx.plat.core.database.DynamicDataSource">
    <property name="targetDataSources">
      <map key-type="java.lang.String">
        <entry key="dataSource_one" value-ref="dataSourcePSQL"/>
      </map>
    </property>
    <property name="defaultTargetDataSource" ref="dataSourcePSQL"/>
  </bean>

  <!-- 配置sqlSessionFactory -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
  </bean>
  <!-- mapper扫描器 -->
  <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.bcx"/>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    <!-- mapper接口必须添加注解 -->
    <property name="annotationClass" value="org.apache.ibatis.annotations.Mapper"/>
  </bean>

  <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- 定义 dao -->
  <bean id="dao" class="com.bcx.plat.core.utils.Dao">
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
  </bean>

  <!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
  <bean name="dataSourcePSQL" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
    destroy-method="close">
    <property name="driverClassName" value="${db1.class}"/>
    <property name="url" value="${db1.jdbcUrl}"/>
    <property name="username" value="${db1.username}"/>
    <property name="password" value="${db1.password}"/>
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="5"/>
    <!-- 连接池最大使用连接数量 -->
    <property name="maxActive" value="30"/>
    <!-- 连接池最大空闲 -->
    <property name="maxIdle" value="30"/>
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="3"/>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="60000"/>
    <!-- #开启psCache缓存 -->
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="100"/>
    <property name="maxPoolPreparedStatementPerConnectionSize" value="50"/>
    <property name="validationQuery" value="SELECT 1"/>
    <property name="testOnBorrow" value="true"/>
    <property name="testOnReturn" value="false"/>
    <!-- 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
    <property name="testWhileIdle" value="true"/>
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="600000"/>
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="5200000"/>
    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="true"/>
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="2600"/>
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true"/>
    <!-- 监控数据库 -->
    <property name="filters" value="mergeStat"/>
  </bean>
</beans>