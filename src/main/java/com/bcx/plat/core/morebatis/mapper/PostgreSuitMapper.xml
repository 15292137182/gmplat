<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bcx.plat.core.morebatis.mapper.PostgreSuitMapper">

  <sql id="solveWhereCondition">
    <where>
      <foreach collection="translator.translate(where)" item="i">
        <choose>
          <when test="i instanceof com.bcx.plat.core.morebatis.cctv1.SqlSegment">${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(i.segment)}</when>
          <when test="i instanceof java.util.Collection">
            <foreach collection="i" separator="," item="item" open="(" close=")">
              #{item}
            </foreach>
          </when>
          <when test="i instanceof com.bcx.plat.core.morebatis.phantom.Column">
          <!--这个地方以后要把column解析搬走-->
            ${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(i.fieldSource)}
          </when>
          <otherwise>#{i}</otherwise>
        </choose>
      </foreach>
    </where>
  </sql>

  <sql id="solveTableSource">
      <foreach collection="translator.translate(tableSource)" item="i">
        <choose>
          <when test="i instanceof com.bcx.plat.core.morebatis.cctv1.SqlSegment">${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(i.segment)}</when>
          <when test="i instanceof java.util.Collection">
            <foreach collection="i" separator="," item="item" open="(" close=")">
              #{item}
            </foreach>
          </when>
          <when test="i instanceof com.bcx.plat.core.morebatis.phantom.Column">
          <!--这个地方以后要把column解析搬走-->
            ${i.getColumnSqlFragment(translator)}
          </when>
          <otherwise>#{i}</otherwise>
        </choose>
      </foreach>
  </sql>

  <select id="select" parameterType="com.bcx.plat.core.morebatis.command.QueryAction"
    resultType="hashmap">
    SELECT
    <trim suffixOverrides=",">
      <foreach collection="columns" item="column">
        ${column.getColumnSqlFragment(translator)},
      </foreach>
    </trim>
    FROM <include refid="solveTableSource"/>
    <include refid="solveWhereCondition"/>
    <!--目前tableJoin不支持嵌套 以后要改进这个地方-->

    <if test="group!=null">
      <foreach open="group by" collection="group" item="g" separator=",">
        ${g.fieldSource}
      </foreach>
    </if>
    <if test="order!=null">
      <foreach open="order by" collection="order" item="o" separator=",">
        <choose>
          <when test="o.column instanceof com.bcx.plat.core.morebatis.phantom.FieldInTable">
            ${o.getColumnSqlFragment(translator)}
          </when>
          <otherwise>
            ${o.fieldSource}
          </otherwise>
        </choose>
        ${o.order==0?"DESC":"ASC"}
      </foreach>
    </if>

    <!--order by <if test="tableSource instanceof com.bcx.plat.core.morebatis.component.JoinTable">-->
      <!--${tableSource.tableFirst.getTableSource(translator)[0].segment}.</if>create_time desc-->
  </select>

  <insert id="insert" parameterType="com.bcx.plat.core.morebatis.command.InsertAction">
    ${valuesRefresh}
    insert into
    <include refid="solveTableSource"/>
    <foreach close=")" collection="columns" item="column" open="(" separator=",">
      ${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(column)}
    </foreach>
    VALUES
    <foreach collection="values" item="row" separator=",">
      <foreach close=")" collection="row" item="rowValue" open="(" separator=",">
            #{rowValue}
      </foreach>
    </foreach>
  </insert>

  <update id="update" parameterType="com.bcx.plat.core.morebatis.command.UpdateAction">
    UPDATE <include refid="solveTableSource"/> SET
    <foreach collection="values" index="field" item="value" separator=",">
      ${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(field)} = #{value}
    </foreach>
    <include refid="solveWhereCondition"/>
  </update>

  <delete id="delete">
    delete FROM <include refid="solveTableSource"/>
    <include refid="solveWhereCondition"/>
  </delete>
</mapper>