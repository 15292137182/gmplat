<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bcx.plat.core.database.action.mapper.TempSuitMapper">
  <select id="select" parameterType="com.bcx.plat.core.database.action.QueryAction"
    resultType="hashmap">
    SELECT
    <trim suffixOverrides=",">
      <foreach collection="columns" item="column">
        ${column.columnSqlFragment},
      </foreach>
    </trim>
    FROM ${tableSource.tableSourceSqlFragment}
    <where>
      <foreach collection="where" item="condition">
        AND ${condition.field.fieldName}
        <choose>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@EQUAL">
            = ${condition.value}
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_LEFT">
            like concat('%',${condition.value})
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_RIGHT">
            like concat(${condition.value},'%')
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_FULL">
            like concat('%',concat(${condition.value},'%'))
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@IN">
            <choose>
              <when test="condition.value.size>0">
                in
                <foreach collection="condition.value" item="v" open="(" separator="," close=")">
                  #{v}
                </foreach>
              </when>
              <otherwise>
                !=${condition.field.fieldName}
              </otherwise>
            </choose>
          </when>
          <otherwise>
            unsupported operator error
          </otherwise>
        </choose>
      </foreach>
    </where>
  </select>

  <insert id="insert" parameterType="com.bcx.plat.core.database.action.InsertAction">
    ${valuesRefresh}
    insert into ${tableSource.tableSourceSqlFragment}
    <foreach collection="columns" open="(" separator="," close=")" item="column">
      ${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(column)}
    </foreach>
    VALUES
    <foreach collection="values" separator="," item="row">
      <foreach collection="row" open="(" close=")" separator="," item="rowValue">
        #{rowValue}
      </foreach>
    </foreach>
  </insert>

  <update id="update" parameterType="com.bcx.plat.core.database.action.UpdateAction">
    UPDATE ${tableSource.tableSourceSqlFragment} SET
    <foreach collection="values" item="value" separator="," index="field">
      ${@com.bcx.plat.core.utils.UtilsTool@camelToUnderline(field)} = #{value}
    </foreach>
    <where>
      <foreach collection="where" item="condition">
        AND ${condition.field.fieldName}
        <choose>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@EQUAL">
            = ${condition.value}
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_LEFT">
            like concat('%',${condition.value})
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_RIGHT">
            like concat(${condition.value},'%')
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_FULL">
            like concat('%',concat(${condition.value},'%'))
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@IN">
            <choose>
              <when test="condition.value.size>0">
                in
                <foreach collection="condition.value" item="v" open="(" separator="," close=")">
                  #{v}
                </foreach>
              </when>
              <otherwise>
                !=${condition.field.fieldName}
              </otherwise>
            </choose>
          </when>
          <otherwise>
            unsupported operator error
          </otherwise>
        </choose>
      </foreach>
    </where>
  </update>

  <delete id="delete">
    delete FROM ${tableSource.tableSourceSqlFragment}
    <where>
      <foreach collection="where" item="condition">
        AND ${condition.field.fieldName}
        <choose>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@EQUAL">
            = ${condition.value}
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_LEFT">
            like concat('%',${condition.value})
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_RIGHT">
            like concat(${condition.value},'%')
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@LIKE_FULL">
            like concat('%',concat(${condition.value},'%'))
          </when>
          <when
            test="condition.operator==@com.bcx.plat.core.database.action.substance.condition.Operator@IN">
            <choose>
              <when test="condition.value.size>0">
                in
                <foreach collection="condition.value" item="v" open="(" separator="," close=")">
                  #{v}
                </foreach>
              </when>
              <otherwise>
                !=${condition.field.fieldName}
              </otherwise>
            </choose>
          </when>
          <otherwise>
            unsupported operator error
          </otherwise>
        </choose>
      </foreach>
    </where>
  </delete>
</mapper>